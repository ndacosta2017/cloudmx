{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Arifu\\\\OneDrive\\\\Documents\\\\GitHub\\\\cloudmx\\\\modules\\\\SiginScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport 'react-native-gesture-handler';\nimport * as React from 'react';\nimport { useState, useEffect, useLayoutEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TextInput } from 'react-native-gesture-handler';\nvar logo = {\n  uri: 'https://reactnative.dev/img/tiny_logo.png',\n  width: 64,\n  height: 64\n};\n\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var use = 'admin';\n  var pass = 'pass';\n  var use2 = 'viewer';\n  var ex = 35;\n  var mode = false;\n  var hangID = 0;\n  var airID = 1;\n\n  var _useState = useState('Username'),\n      _useState2 = _slicedToArray(_useState, 2),\n      Username = _useState2[0],\n      setUsername = _useState2[1];\n\n  function userNameFunc(Username) {\n    setUsername(Username);\n  }\n\n  var _useState3 = useState('Password'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Password = _useState4[0],\n      setPassword = _useState4[1];\n\n  function passWordFunc(Password) {\n    setPassword(Password);\n  }\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      lockOut = _useState6[0],\n      setLockOut = _useState6[1];\n\n  var _useState7 = useState(5),\n      _useState8 = _slicedToArray(_useState7, 2),\n      wrongCredentials = _useState8[0],\n      setWrongCredentials = _useState8[1];\n\n  useEffect(function () {\n    setUsername('');\n    setPassword('');\n  }, []);\n\n  function check(navigation) {\n    var url, url2, requestOptions;\n    return _regeneratorRuntime.async(function check$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (wrongCredentials == 0 || lockOut == false) {\n              setLockOut(false);\n              alert('You have been locked out of the app for repeated failed login attempts. Please alert an admin for assistance or click the link above if you have forgotten your password.');\n            }\n\n            if (!(wrongCredentials > 0)) {\n              _context.next = 23;\n              break;\n            }\n\n            url = \"https://7n9cvyktjg.execute-api.us-east-1.amazonaws.com/test/users?username=\" + Username + \"&password=\" + Password;\n            url2 = \"https://7n9cvyktjg.execute-api.us-east-1.amazonaws.com/test/admin?username=\" + Username + \"&password=\" + Password;\n            requestOptions = {\n              method: 'POST',\n              mode: 'cors',\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            };\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(postData(url, requestOptions));\n\n          case 7:\n            if (!_context.sent) {\n              _context.next = 12;\n              break;\n            }\n\n            mode = false;\n            navigation.navigate('Map', {\n              itemID: Username,\n              itemPass: Password,\n              adminViewer: mode,\n              aicraftID: airID,\n              hangarID: hangID\n            });\n            _context.next = 23;\n            break;\n\n          case 12:\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(postData(url2, requestOptions));\n\n          case 14:\n            if (!_context.sent) {\n              _context.next = 20;\n              break;\n            }\n\n            setWrongCredentials(5);\n            mode = true;\n            navigation.navigate('Map', {\n              itemID: Username,\n              itemPass: Password,\n              adminViewer: mode,\n              aircraftID: airID,\n              hangarID: hangID\n            });\n            _context.next = 23;\n            break;\n\n          case 20:\n            setWrongCredentials(wrongCredentials - 1);\n\n            if (wrongCredentials > 1) {\n              alert('Wrong Username and/or Password. You have ' + wrongCredentials + ' more tries.');\n            }\n\n            if (wrongCredentials == 1) {\n              alert('Wrong Username and/or Password. You have ' + wrongCredentials + ' more try.');\n            }\n\n          case 23:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function postData(url, requestOptions) {\n    var test = fetch(url, requestOptions).then(function (response) {\n      return response.json();\n    }).then(function (users) {\n      if (users.length > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n    return test;\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../assets/Air_Force_logo.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.inputView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.TextInput,\n    editable: lockOut,\n    placeholder: \"Username\",\n    placeholderTextColor: \"white\",\n    onChangeText: function onChangeText(Username) {\n      return setUsername(Username);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.inputView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.TextInput,\n    editable: lockOut,\n    placeholder: \"Password\",\n    placeholderTextColor: \"white\",\n    secureTextEntry: false,\n    onChangeText: function onChangeText(Password) {\n      return setPassword(Password);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  })), React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.forgot_button,\n    onPress: function onPress() {\n      return navigation.navigate('Password');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, \"Forgot Password?\")), React.createElement(TouchableOpacity, {\n    style: styles.loginBtn,\n    onPress: function onPress() {\n      return check(navigation);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.inputText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, \"LOGIN\")));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"gray\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputView: {\n    backgroundColor: \"#FF0000\",\n    borderRadius: 30,\n    width: \"70%\",\n    height: 45,\n    marginBottom: 20,\n    alignItems: \"center\"\n  },\n  TextInput: {\n    height: 50,\n    flex: 1,\n    padding: 10,\n    marginLeft: 20,\n    color: 'white'\n  },\n  rightHead: {\n    color: '#fff',\n    fontSize: 18,\n    paddingRight: 10\n  },\n  forgot_button: {\n    height: 30,\n    marginBottom: 30,\n    color: 'white'\n  },\n  loginBtn: {\n    width: \"80%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    backgroundColor: \"#000080\"\n  },\n  inputText: {\n    color: 'white'\n  },\n  logo: {\n    borderColor: \"blue\",\n    borderWidth: 0,\n    flex: 0.3,\n    width: 200,\n    height: 200,\n    marginBottom: 10\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["C:/Users/Arifu/OneDrive/Documents/GitHub/cloudmx/modules/SiginScreen.js"],"names":["React","useState","useEffect","useLayoutEffect","TextInput","logo","uri","width","height","LoginScreen","navigation","use","pass","use2","ex","mode","hangID","airID","Username","setUsername","userNameFunc","Password","setPassword","passWordFunc","lockOut","setLockOut","wrongCredentials","setWrongCredentials","check","alert","url","url2","requestOptions","method","headers","postData","navigate","itemID","itemPass","adminViewer","aicraftID","hangarID","aircraftID","test","fetch","then","response","json","users","length","styles","container","require","inputView","forgot_button","loginBtn","inputText","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","borderRadius","marginBottom","padding","marginLeft","color","rightHead","fontSize","paddingRight","marginTop","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\r\nimport * as React from 'react';\r\nimport { useState, useEffect,useLayoutEffect, } from 'react';\r\nimport { StyleSheet, Text, View, Button, StatusBar, TouchableOpacity, Image } from 'react-native';\r\nimport { TextInput } from 'react-native-gesture-handler';\r\n\r\nconst logo = {\r\n  uri: 'https://reactnative.dev/img/tiny_logo.png',\r\n  width: 64,\r\n  height: 64\r\n};\r\n\r\nfunction LoginScreen ({navigation}) {\r\n\r\n  const use = 'admin'\r\n  const pass = 'pass'\r\n  const use2 = 'viewer'\r\n  var ex = 35\r\n  var mode = false\r\n  var hangID = 0\r\n  var airID = 1\r\n\r\n  const [Username, setUsername] = useState('Username');\r\n\r\n  function userNameFunc(Username){\r\n    setUsername(Username);\r\n\r\n  }\r\n\r\n  const [Password, setPassword] = useState('Password');\r\n\r\n  function passWordFunc(Password){\r\n    setPassword(Password);\r\n\r\n  }\r\n\r\n  const [lockOut,setLockOut] = useState(true)\r\n\r\n  const [wrongCredentials,setWrongCredentials] = useState(5)\r\n\r\n  useEffect(() => {\r\n    setUsername('')\r\n    setPassword('')\r\n\r\n  }, []);\r\n\r\n  //const [login, setLogin] = useState(false);\r\n\r\n  async function check(navigation){\r\n\r\n    if ((wrongCredentials == 0) || (lockOut == false)){\r\n      setLockOut(false)\r\n      alert('You have been locked out of the app for repeated failed login attempts. Please alert an admin for assistance or click the link above if you have forgotten your password.')\r\n    }\r\n\r\n    if (wrongCredentials > 0){\r\n\r\n    var url = \"https://7n9cvyktjg.execute-api.us-east-1.amazonaws.com/test/users?username=\"+Username+\"&password=\"+Password\r\n    var url2 = \"https://7n9cvyktjg.execute-api.us-east-1.amazonaws.com/test/admin?username=\"+Username+\"&password=\"+Password\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        headers: { 'Content-Type': 'application/json' }\r\n    }\r\n    if(await postData(url, requestOptions))\r\n    {\r\n        //the user is viewer\r\n        mode = false\r\n        navigation.navigate('Map',{itemID: Username,itemPass:Password, adminViewer: mode,aicraftID: airID,hangarID: hangID})\r\n    }\r\n    \r\n    else if(await postData(url2, requestOptions))\r\n    {\r\n        //the user is admin\r\n        setWrongCredentials(5)\r\n        mode = true\r\n        navigation.navigate('Map',{itemID: Username,itemPass:Password, adminViewer: mode, aircraftID: airID,hangarID: hangID})\r\n    }\r\n    else{\r\n      setWrongCredentials(wrongCredentials - 1)\r\n      if (wrongCredentials > 1){\r\n        alert('Wrong Username and/or Password. You have '+wrongCredentials+' more tries.')\r\n      }\r\n      if (wrongCredentials ==1){\r\n        alert('Wrong Username and/or Password. You have '+wrongCredentials+' more try.')\r\n      }\r\n  \r\n    }\r\n             //\r\n    }\r\n  }\r\n    \r\n  // Example POST method implementation:\r\n function postData(url, requestOptions) {\r\n \r\n     var test = fetch(url, requestOptions)\r\n      .then(response => response.json())\r\n      .then(users => {\r\n        if(users.length > 0) \r\n        {\r\n            return true\r\n        }\r\n        else\r\n        {\r\n            return false\r\n        }\r\n    })\r\n //console.log(test)\r\n return test\r\n}\r\n  //const [email, setEmail] = useState(\"\");\r\n  /*\r\n\r\n  if (username == Admin){\r\n    mode = true\r\n    return true\r\n  }\r\n  else if (username == Viewer){\r\n    mode = false\r\n    return true\r\n  }\r\n  else {\r\n    return false \r\n  }\r\n\r\n  */\r\n  //const [password, setPass] = useState(\"\"); style={styles.logo}\r\n\r\n    return (\r\n    <View style={styles.container}>\r\n      <Image style={styles.logo} source={require(\"../assets/Air_Force_logo.png\")} />\r\n      \r\n      <StatusBar style=\"auto\" />\r\n      <View style={styles.inputView}>\r\n        <TextInput\r\n          style={styles.TextInput}\r\n          editable={lockOut}\r\n          placeholder=\"Username\"\r\n          placeholderTextColor=\"white\"\r\n          onChangeText={(Username) => setUsername(Username)}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.inputView}>\r\n        <TextInput\r\n          style={styles.TextInput}\r\n          editable={lockOut}\r\n          placeholder=\"Password\"\r\n          placeholderTextColor=\"white\"\r\n          secureTextEntry={false}\r\n          onChangeText={(Password) => setPassword(Password)}\r\n        />\r\n      </View>\r\n\r\n      <TouchableOpacity>\r\n        <Text style={styles.forgot_button} \r\n        onPress = {() =>  navigation.navigate('Password') } \r\n        >Forgot Password?</Text>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity style={styles.loginBtn}\r\n      onPress = { () => check(navigation) } >\r\n        <Text style={styles.inputText} >\r\n          LOGIN\r\n        </Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n                  \r\n    )\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: \"gray\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n  \r\n    inputView: {\r\n      backgroundColor: \"#FF0000\",\r\n      borderRadius: 30,\r\n      width: \"70%\",\r\n      height: 45,\r\n      marginBottom: 20,\r\n      alignItems: \"center\",\r\n    },\r\n  \r\n    TextInput: {\r\n      height: 50,\r\n      flex: 1,\r\n      padding: 10,\r\n      marginLeft: 20,\r\n      color: 'white'\r\n    },\r\n    rightHead:{\r\n      color: '#fff',\r\n      fontSize: 18,\r\n      paddingRight: 10\r\n    },\r\n  \r\n    forgot_button: {\r\n      height: 30,\r\n      marginBottom: 30,\r\n      color: 'white'\r\n    },\r\n  \r\n    loginBtn: {\r\n      width: \"80%\",\r\n      borderRadius: 25,\r\n      height: 50,\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      marginTop: 40,\r\n      backgroundColor: \"#000080\",\r\n    },\r\n    inputText: {\r\n      color: 'white'\r\n    },\r\n    logo: {\r\n      borderColor: \"blue\",\r\n      borderWidth: 0,\r\n      flex: 0.3,\r\n      width: 200,\r\n      height: 200,\r\n      marginBottom: 10\r\n      //resizeMode: 'contain',\r\n    },\r\n    \r\n  })\r\n\r\nexport default LoginScreen ;"]},"metadata":{},"sourceType":"module"}